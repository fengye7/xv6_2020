1.	哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
A：a0-a7存放函数的参数；a2

2.	main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
A：没有题给所说的调用代码；g(x)被内链到f(x)中，然后f(x)又被进一步内链到main()中

3.	printf函数位于哪个地址？
A：0x0000000000000628, main 中使用 pc 相对寻址来计算得到这个地址。

4.	在main中printf的jalr之后的寄存器ra中有什么值？
A：0x0000000000000038, jalr 指令的下一条汇编指令的地址。

5.	运行代码，回答问题
（1）运行：
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
程序的输出是什么？这是将字节映射到字符的ASCII码表。输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？
A： “He110 World”; 0x726c6400; 不需要，57616 的十六进制是 110，无论端序（十六进制和内存中的表示不是同个概念）

（2）在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值)？为什么会发生这种情况？
printf("x=%d y=%d", 3);

A：输出的是一个受调用前的代码影响的“随机”的值。因为 printf 尝试读的参数数量比提供的参数数量多。 第二个参数 3 通过 a1 传递，而第三个参数对应的寄存器 a2 在调用前不会被设置为任何具体的值，而是会 包含调用发生前的任何已经在里面的值。
